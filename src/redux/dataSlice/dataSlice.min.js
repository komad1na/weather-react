// @ts-nocheck
import{createSlice}from"@reduxjs/toolkit";import axios from"axios";import{toast}from"react-toastify";const initialState={cityLatLon:{name:"-----"},data:{cod:0,main:{temp:"---",feels_like:"---",humidity:"---",temp_max:"---",temp_min:"---",pressure:"---"},weather:[{icon:"01d",main:"---"}],wind:{speed:0,deg:0},clouds:{all:0},sys:{sunrise:0,sunset:0}},airPollution:{pm10:0,no2:0,o3:0,pm2_5:0},forecast:{list:[]}},APIKEY=process.env.REACT_APP_API_KEY,errorLoading=()=>{toast.error("City can't be found.",{position:"bottom-left",autoClose:3e3,hideProgressBar:!1,closeOnClick:!1,pauseOnHover:!1,draggable:!1,progress:void 0,toastId:"error",theme:"dark"})},loaded=()=>{toast.success("Data loaded.",{position:"bottom-left",autoClose:2e3,hideProgressBar:!1,closeOnClick:!1,pauseOnHover:!1,draggable:!1,progress:void 0,toastId:"success",theme:"dark"})},dataSlice=createSlice({name:"data",initialState:initialState,reducers:{setData(t,a){t.data=a.payload},setLatLon(t,a){t.cityLatLon=a.payload},setAirPollution(t,a){t.airPollution=a.payload},setForecast(t,a){t.forecast=[...a.payload]}}});export const getAPIData=t=>async a=>{const e=`https://api.openweathermap.org/geo/1.0/direct?q=${t}&limit=1&appid=${APIKEY}`;axios.get(e).then((t=>{if(0!=t.data.length){a(setLatLon(t.data[0]));const e=`https://api.openweathermap.org/data/2.5/weather?lat=${t.data[0].lat}&lon=${t.data[0].lon}&appid=${APIKEY}&units=metric`;axios.get(e).then((t=>{a(setData(t.data)),loaded()})).catch((t=>{errorLoading()}));const o=`https://api.openweathermap.org/data/2.5/air_pollution?lat=${t.data[0].lat}&lon=${t.data[0].lon}&appid=${APIKEY}`;axios.get(o).then((t=>{let e=t.data.list[0].components;a(setAirPollution(e))})).catch((t=>{errorLoading()}));const s=`https://api.openweathermap.org/data/2.5/forecast?lat=${t.data[0].lat}&lon=${t.data[0].lon}&appid=${APIKEY}&units=metric`;axios.get(s).then((t=>{let e=t.data.list;a(setForecast(e))})).catch((t=>{errorLoading()}))}else errorLoading()})).catch((t=>{console.log(t),errorLoading()}))};export const{setData:setData,setLatLon:setLatLon,setAirPollution:setAirPollution,setForecast:setForecast}=dataSlice.actions;export default dataSlice.reducer;